$grid-settings: (
  type: 'flex',
  columns: $base-max-columns,
  max-width: $base-max-width,
  gutter: $base-grid-gutter,
  direction: 'ltr'
);

$grid-tablet-settings: (
  type: 'flex',
  columns: 6,
  max-width: $base-max-width,
  gutter: $base-grid-gutter,
  direction: 'ltr'
);

$grid-mobile-settings: (
  type: 'flex',
  columns: 4,
  max-width: $base-max-width,
  gutter: $base-grid-gutter,
  direction: 'ltr'
);

/// @param {map} $map
@mixin g-wrapper($map: $grid-settings) {
  $max-width:  map-get($map, max-width);
  width: 100%;
  max-width: $max-width;
  margin: auto;
}


/// @param {map} $map
/// @param {boolean} $inc_gutter
/// @param {boolean/integer} $space-below

@mixin g-row($map: $grid-settings, $inc_gutter: true, $space-below: true) {

  $type: map-get($map, type);
  $direction: map-get($map, direction);
  $gutter: map-get($map, gutter);
  $max-width:  map-get($map, max-width);

  @if $type == 'flex' {
    display: flex;
    flex-wrap: wrap;
  }

  @if $type == 'float' {
    @include cf();
  }

  @if $type == 'inline' {
    font-size: 0;
  }

  @if $type == 'justify' {
    font-size: 0;
    text-align: justify;
    &:after {
      display: inline-block;
      width: 100%;
      content: " "
    }
  }

  @if $inc_gutter == true {
    margin-left: -$gutter * 2;
  }  

  @if $space-below != false {
    @if type-of($space-below) == number {
      margin-bottom: $space-below;
    } @else {
      margin-bottom: $gutter * 2;
    }
  }
}


/// @param {integer/boolean} $columns
/// @param {map} $map
/// @param {boolean} $inc_gutter

@mixin g-col($columns: 1, $map: $grid-settings, $inc_gutter: true) {
  $gutter: map-get($map, gutter);
  $total_columns: map-get($map, columns);

  @if $inc_gutter == true {
    padding-left: $gutter * 2;
  }  

  @if $columns != false {
    @if type-of($columns) != list {
      width: gridCalc($columns, $total_columns);
    } @else {
      $column: nth($columns,1);
      $count: nth($columns,2);
      width: gridCalc($column, $count);
    }
  }
}
