// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;

$pngSprite: (

		logo-desktop: (
			x: 0px, 
			y: 0px, 
			backgroundX: 0px, 
			backgroundY: 0px, 
			width: 220px, 
			height: 32px, 
			path: '../images/png-sprite.png', 
			name: 'logo-desktop',
		),
		logo-mobile-star: (
			x: 93px, 
			y: 32px, 
			backgroundX: -93px, 
			backgroundY: -32px, 
			width: 50px, 
			height: 50px, 
			path: '../images/png-sprite.png', 
			name: 'logo-mobile-star',
		),
		logo-star: (
			x: 143px, 
			y: 32px, 
			backgroundX: -143px, 
			backgroundY: -32px, 
			width: 44px, 
			height: 44px, 
			path: '../images/png-sprite.png', 
			name: 'logo-star',
		),
		logo: (
			x: 0px, 
			y: 32px, 
			backgroundX: 0px, 
			backgroundY: -32px, 
			width: 93px, 
			height: 50px, 
			path: '../images/png-sprite.png', 
			name: 'logo',
		),
		play-btn: (
			x: 0px, 
			y: 82px, 
			backgroundX: 0px, 
			backgroundY: -82px, 
			width: 65px, 
			height: 65px, 
			path: '../images/png-sprite.png', 
			name: 'play-btn',
		),

	);

	@mixin png-sprite($name) {
		$sprite: map-get($pngSprite, $name);
		width: map-get($sprite, width);
		height: map-get($sprite, height);
		background: url(map-get($sprite, path)) no-repeat map-get($sprite, backgroundX) map-get($sprite, backgroundY);
	}


